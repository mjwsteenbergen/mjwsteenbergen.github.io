{"version":3,"sources":["modal/close-circle-outline.svg","Points.ts","modal/Modal.tsx","locationOverview/LocationOverview.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getExistingLocations","window","localStorage","getItem","setItem","JSON","parse","ModalState","WModal","state","modalState","props","Open","cName","this","toString","closeButton","Peek","hideClose","onClick","setState","Hidden","src","logo","className","alt","style","zIndex","title","children","modal","document","getElementById","classList","remove","add","React","Component","LocationOverview","listItems","map","i","key","id","location","createModal","undefined","Date","now","description","href","link","target","App","locs","newLocations","SetupMap","checkForNewLocations","mapboxgl","accessToken","Map","container","zoom","center","visited","getVisitedLocations","coordinates","longitude","latitude","forEach","Marker","color","some","j","setLngLat","addTo","navigator","geolocation","getCurrentPosition","position","coords","setCenter","setZoom","isCloseTo","addToLocalStorage","concat","e","alert","stringify","error","watchPosition","length","newLocal","distance","console","warn","lon1","lat1","lon2","lat2","toRad","input","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c91a8762.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-circle-outline.64600fb0.svg\";","export class Coords {\r\n    latitude!: number;\r\n    longitude!: number;\r\n}\r\n\r\nexport class WLocation {\r\n    id!: string;\r\n    title!: string;\r\n    description!: string;\r\n    coordinates!: Coords;\r\n    link!: string;\r\n}\r\n\r\nexport function getLocations(): WLocation[] {\r\n    return [\r\n        {\r\n            id: \"temp\",\r\n            title: \"Secret location\",\r\n            description: \"Here\",\r\n            coordinates: {\r\n                longitude: 52.1,\r\n                latitude: 4.21,\r\n            },\r\n            link: \"https://nntn.nl\"\r\n        },\r\n        {\r\n            id: \"temp-venlo\",\r\n            title: \"Venlo\",\r\n            description: \"Here\",\r\n            coordinates: {\r\n                longitude: 51.23,\r\n                latitude: 6.10,\r\n            },\r\n            link: \"https://nntn.nl\"\r\n        },\r\n        {\r\n            id: \"temp-ah\",\r\n            title: \"Albert Heijn\",\r\n            description: \"Its an Albert Heijn. Gotta debug somehow\",\r\n            coordinates: {\r\n                longitude: 51.9966037, \r\n                latitude: 4.3508977\r\n            },\r\n            link: \"https://nntn.nl\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport function getExistingLocations(): WLocation[] {\r\n    if (window.localStorage.getItem(\"foundLocations\") === null) {\r\n        window.localStorage.setItem(\"foundLocations\", \"[]\");\r\n    }\r\n    var json = JSON.parse(window.localStorage.getItem(\"foundLocations\") || \"\");\r\n    // var json = getLocations();\r\n\r\n    return (json as WLocation[]);\r\n}\r\n\r\nexport function getFirstLocation(): WLocation {\r\n    return {\r\n        id: \"introduction\",\r\n        coordinates: {\r\n            latitude: 0,\r\n            longitude: 0\r\n        },\r\n        description: \"Welcome to your present! This website will guide you through a lot of fun memories. Go to the points on the map an have fun!\",\r\n        title: \"Introduction\",\r\n        link: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\r\n    }\r\n}","import React from 'react';\r\nimport './Modal.css'\r\nimport logo from './close-circle-outline.svg';\r\n\r\nexport enum ModalState {\r\n    Open, Hidden, Peek\r\n}\r\n\r\nexport class WModal extends React.Component<{ modalState?: ModalState; title: string; hideClose?: boolean;}, { modalState: ModalState; }> {\r\n    state = {\r\n        modalState: this.props.modalState || ModalState.Open\r\n    }\r\n\r\n    render() {\r\n        // let cName: string = \"element-animation\"\r\n        let cName: string = \"modal\";\r\n        cName += \" modal\" + this.state.modalState.toString();\r\n        cName += \" modal\" + this.props.modalState?.toString() + \"intro\";\r\n\r\n        var closeButton = null;\r\n        if(this.state.modalState !== ModalState.Peek && !this.props.hideClose)\r\n        {\r\n            closeButton = <img onClick={() => this.setState({modalState: ModalState.Hidden})} src={logo} className=\"modalclose\" alt=\"logo\" />;\r\n        }\r\n\r\n        return (\r\n            <div className={cName} style={{\r\n                zIndex: this.props.modalState === ModalState.Open ? 100 : 50\r\n            }}>\r\n                <div className='modaltop'>\r\n                    <h1 onClick={() => this.setState({modalState: this.state.modalState === ModalState.Open ? ModalState.Peek : ModalState.Open})}>{this.props.title}</h1>\r\n                    {closeButton}\r\n                </div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    onmodalclick() {\r\n        var modal = document.getElementById(\"modal\");\r\n        modal?.classList.remove(\"element-animation\");\r\n        modal?.classList.add(\"element-animation-reverse\");\r\n    }\r\n}","import React from \"react\";\r\nimport { ModalState, WModal } from \"../modal/Modal\";\r\nimport { getExistingLocations, WLocation } from \"../Points\";\r\nimport './LocationOverview.css'\r\n\r\nexport class LocationOverview extends React.Component<{}, { location?: WLocation}> {\r\n\r\n\r\n    render() {\r\n        var listItems = getExistingLocations().map(i => <li key={i.id} onClick={() => {\r\n            this.setState({\r\n                location: i\r\n            });}\r\n        }>{i.title}</li>)\r\n\r\n        return [<WModal key=\"a\" title=\"Found locations\" modalState={ModalState.Peek} hideClose={true}>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </WModal>,\r\n            this.createModal(this.state?.location)\r\n        ]\r\n    }\r\n\r\n    createModal(location?: WLocation) {\r\n        if(location === undefined)\r\n        {\r\n            return null;\r\n        }\r\n        var mod = <WModal key={Date.now()} title={location.title} modalState={ModalState.Open}>\r\n            <p>{location.description}</p>\r\n         <a className=\"modal-link\" href={location.link} target=\"blank\">\r\n           <p className=\"modal-link-container\">Open secret</p>\r\n         </a>\r\n        </WModal>\r\n        return mod;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { Map } from 'mapbox-gl';\nimport mapboxgl from 'mapbox-gl';\nimport { getExistingLocations as getVisitedLocations, getFirstLocation, getLocations, WLocation } from './Points';\nimport { LocationOverview } from './locationOverview/LocationOverview';\nimport { ModalState, WModal } from './modal/Modal';\n\n\nexport default class App extends React.Component<{}, { map?: Map, newLocations: WLocation[]}> {\n\n  render() {\n    var locs = (this.state?.newLocations || []).map(i => <WModal key={Date.now()} title={i.title + \" 🎉\"} modalState={ModalState.Peek}>\n      <p>{i.description}</p>\n      <a className=\"modal-link\" href={i.link} target=\"blank\">\n        <p className=\"modal-link-container\">Open secret</p>\n      </a>\n    </WModal>)\n    return [\n      <div key=\"a\" id=\"map\"></div>,\n      <LocationOverview key=\"b\"/>,\n      locs\n    ];\n  }\n\n  componentDidMount() {\n    this.SetupMap();\n    this.checkForNewLocations();\n  }\n\n  private SetupMap() {\n    mapboxgl.accessToken = 'pk.eyJ1IjoibmV3bm90dGFrZW5uYW1lIiwiYSI6ImNrZjhuZzZvZjA2MDUyd3B4MmdkMzhpamEifQ.3p91vKWfOce6fRzddTg_qA';\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/newnottakenname/ckf8o4w885kx21and6jq56h8q',\n      zoom: 6,\n      center: [5.55, 52.316667]\n    });\n\n    this.setState({\n      map: map\n    });\n\n    var visited = getVisitedLocations();\n    getLocations().forEach(i => {\n      new mapboxgl.Marker({\n        color: visited.some(j => i.id === j.id) ? \"orange\" : undefined \n      })\n        .setLngLat([i.coordinates.latitude, i.coordinates.longitude])\n        .addTo(map);\n    });\n  }\n\n  checkForNewLocations() {\n    if (!navigator.geolocation) {\n      alert(\"Please allow me to use your location. Pls?\")\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        try {\n          let map = this.state.map;\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          map?.setCenter([longitude, latitude]);\n          map?.setZoom(12);\n\n          var visited = getVisitedLocations();\n          getLocations().forEach(i => {\n            if (visited.some(j => i.id === j.id)) {\n              return;\n            }\n\n            if (this.isCloseTo(i, longitude, latitude)) {\n              this.addToLocalStorage(i);\n              this.setState({\n                newLocations: (this.state.newLocations || []).concat([i])\n              })\n            }\n          });\n        } catch(e) {\n          alert(\"Error. App.tsx:88 \" + JSON.stringify(e));\n        }\n      }, (error) => {\n        alert(\"Error getting current location \" + JSON.stringify(error));\n      });\n\n      navigator.geolocation.watchPosition((position) => {\n          let map = this.state.map;\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          map?.setCenter([longitude, latitude]);\n          map?.setZoom(12);\n        }, (error) => {\n          alert(\"Error getting current location from watchPosition\" + JSON.stringify(error));\n      })\n\n      if (getVisitedLocations().length === 0) {\n        this.addToLocalStorage(getFirstLocation());\n        this.setState({\n          newLocations: (this.state.newLocations || []).concat(getFirstLocation())\n        })\n      }\n    }\n  }\n\n\n  addToLocalStorage(i: WLocation) {\n    window.localStorage.setItem(\"foundLocations\", JSON.stringify(getVisitedLocations().concat([i])));\n  }\n\n\n  isCloseTo(i: WLocation, longitude: number, latitude: number) {\n    const newLocal = this.distance(i.coordinates.longitude, i.coordinates.latitude, latitude, longitude);\n    console.warn(newLocal, i, longitude, latitude);\n    return newLocal < 1;\n  }\n\n  \n\n  distance(lon1:number, lat1:number, lon2:number, lat2:number) {\n    function toRad(input: number)\n    {\n      return input * Math.PI / 180;\n    }\n\n    var R = 6371; // Radius of the earth in km\n    var dLat = toRad(lat2 - lat1);  // Javascript functions in radians\n    var dLon = toRad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}